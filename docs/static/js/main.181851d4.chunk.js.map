{"version":3,"sources":["helpers/getCards.js","components/Card.js","components/GridCards.js","hooks/useFetchCards.js","components/SearchUser.js","App.js","index.js"],"names":["getCards","userId","a","url","fetch","response","json","data","Card","cardInfo","body","title","useState","showCard","setShowCard","transition","useTransition","from","x","y","opacity","enter","leave","style","card","div","className","onClick","icon","faTrashAlt","GridCards","cards","setCards","useEffect","then","useFetchCards","map","id","SearchUser","setUserId","input","setInput","onSubmit","e","preventDefault","type","placeholder","value","onChange","target","App","ReactDOM","render","document","getElementById"],"mappings":"kNAAaA,EAAQ,uCAAG,WAAOC,GAAP,mBAAAC,EAAA,6DAChBC,EADgB,4DAC2CF,GAD3C,SAECG,MAAMD,GAFP,cAEhBE,EAFgB,gBAGHA,EAASC,OAHN,cAGhBC,EAHgB,yBAIfA,GAJe,2CAAH,sD,uCCMRC,EAAO,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAEbC,EAAwBD,EAAxBC,KAAMC,EAAkBF,EAAlBE,MAAOV,EAAWQ,EAAXR,OACrB,EAAgCW,oBAAS,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KAEMC,EAAaC,wBAAcH,EAAU,CACzCI,KAAM,CAAEC,GAAI,IAAKC,EAAG,IAAKC,QAAS,GAClCC,MAAO,CAAEH,EAAG,EAAGC,EAAG,EAAGC,QAAS,GAC9BE,MAAO,CAAEJ,GAAI,IAAKC,EAAG,IAAKC,QAAS,KAGrC,OACE,mCAEIP,GAEAE,GAAW,SAACQ,EAAOC,GAAR,OACT,eAAC,WAASC,IAAV,CAAcC,UAAU,OAAOH,MAAOA,EAAtC,UACE,+BACE,2CAActB,KACd,yCAAYU,KACZ,wCAAWD,QAEb,wBAAQgB,UAAU,kBAAkBC,QAAS,WAAQb,GAAY,IAAjE,SACE,cAAC,IAAD,CAAiBc,KAAMC,iBC1BxBC,EAAY,SAAC,GAAgB,IAElCvB,ECHqB,SAACN,GAC5B,MAA0BW,mBAAS,IAAnC,mBAAOmB,EAAP,KAAcC,EAAd,KASA,OAPAC,qBAAU,WACRjC,EAASC,GACNiC,MAAK,SAAA3B,GACJyB,EAASzB,QAEZ,CAACN,IAEG8B,EDPMI,CAF0B,EAAblC,QAI1B,OACE,qBAAKyB,UAAU,YAAf,SAEInB,EAAK6B,KAAI,SAAC3B,GACR,OAAO,cAAC,EAAD,CAELA,SAAUA,GADLA,EAAS4B,UEXbC,EAAa,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UAE3B,EAA0B3B,mBAAS,IAAnC,mBAAO4B,EAAP,KAAcC,EAAd,KAWA,OACE,uBAAMC,SANa,SAACC,GACpBA,EAAEC,iBACFL,EAAUC,IAIV,UACE,6DACA,uBACEK,KAAK,OACLC,YAAY,OACZC,MAAOP,EACPQ,SAhBc,SAACL,GACnBF,EAASE,EAAEM,OAAOF,cCHTG,EAAM,WAEjB,MAA4BtC,mBAAS,IAArC,mBAAOX,EAAP,KAAesC,EAAf,KAEA,OACE,gCACE,cAAC,EAAD,CAAYA,UAAWA,IACvB,uBACA,cAAC,EAAD,CAAWtC,OAAQA,Q,MCPzBkD,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.181851d4.chunk.js","sourcesContent":["export const getCards = async (userId) => {\r\n  const url = `https://jsonplaceholder.typicode.com/posts?userId=${userId}`;\r\n  const response = await fetch(url);\r\n  const data = await response.json();\r\n  return data;\r\n}","import React, { useState } from 'react';\r\nimport '../styles/card.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons'\r\nimport { useTransition, animated } from 'react-spring'\r\n\r\nexport const Card = ({ cardInfo }) => {\r\n\r\n  const { body, title, userId } = cardInfo;\r\n  const [showCard, setShowCard] = useState(true);\r\n\r\n  const transition = useTransition(showCard, {\r\n    from: { x: -100, y: 800, opacity: 0 },\r\n    enter: { x: 0, y: 0, opacity: 1 },\r\n    leave: { x: -100, y: 800, opacity: 0 },\r\n  });\r\n\r\n  return (\r\n    <>\r\n      {\r\n        showCard\r\n        &&\r\n        transition((style, card) =>\r\n          <animated.div className=\"card\" style={style}>\r\n            <ol>\r\n              <li>User id: {userId}</li>\r\n              <li>Title: {title}</li>\r\n              <li>Body: {body}</li>\r\n            </ol>\r\n            <button className=\"btn btn-primary\" onClick={() => { setShowCard(false) }}>\r\n              <FontAwesomeIcon icon={faTrashAlt}></FontAwesomeIcon>\r\n            </button>\r\n          </animated.div>)\r\n      }\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { useFetchCards } from '../hooks/useFetchCards'\r\nimport { Card } from './Card';\r\n\r\nexport const GridCards = ({ userId }) => {\r\n\r\n  const data = useFetchCards(userId);\r\n\r\n  return (\r\n    <div className=\"card-Grid\">\r\n      {\r\n        data.map((cardInfo) => {\r\n          return <Card\r\n            key={cardInfo.id}\r\n            cardInfo={cardInfo}\r\n          />\r\n        })\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n","import { useEffect, useState } from \"react\"\r\nimport { getCards } from \"../helpers/getCards\";\r\n\r\nexport const useFetchCards = (userId) => {\r\n  const [cards, setCards] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getCards(userId)\r\n      .then(data => {\r\n        setCards(data);\r\n      })\r\n  }, [userId]);\r\n\r\n  return cards;\r\n}","import React, { useState } from 'react';\r\n\r\nexport const SearchUser = ({ setUserId }) => {\r\n\r\n  const [input, setInput] = useState('');\r\n\r\n  const handleInput = (e) => {\r\n    setInput(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setUserId(input);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <h4>Introduce la ID del usuario</h4>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"1-10\"\r\n        value={input}\r\n        onChange={handleInput}\r\n      />\r\n    </form>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { GridCards } from './components/GridCards'\r\nimport { SearchUser } from './components/SearchUser'\r\n\r\nexport const App = () => {\r\n\r\n  const [userId, setUserId] = useState('');\r\n\r\n  return (\r\n    <div>\r\n      <SearchUser setUserId={setUserId} />\r\n      <hr />\r\n      <GridCards userId={userId} />\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport './styles/index.css';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}